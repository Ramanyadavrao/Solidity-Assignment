// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract CustomToken {

    string public name;
    string public symbol;
    uint256 public totalSupply;

    mapping(address => uint256) private balances;

    constructor(string memory _name, string memory _symbol, uint256 _initialSupply) {
        name = _name;
        symbol = _symbol;
        totalSupply = _initialSupply;
        balances[msg.sender] = _initialSupply;
    }

    function getBalance(address _account) external view returns (uint256) {
        return balances[_account];
    }

    function mint(address _to, uint256 _amount) external {
        totalSupply += _amount;
        balances[_to] += _amount;
    }

    function burn(address _from, uint256 _amount) external {
        require(balances[_from] >= _amount, "Insufficient balance");
        totalSupply -= _amount;
        balances[_from] -= _amount;
    }
}
